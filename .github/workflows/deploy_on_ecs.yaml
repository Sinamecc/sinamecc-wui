name: Deploy on ECS
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to (development, production)'
        required: true
        default: 'development'
        type: choice
        options:
          - dev
          - prod

jobs:
  register-images:
    name: 'Register Images into ECR'
    uses: ./.github/workflows/build-and-push-images.yaml
    with:
      environment: ${{ github.event.inputs.environment }}

    secrets:
      AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}

  deploy-on-ecs:
    name: 'Deploy on ECS Cluster (${{ github.event.inputs.environment }})'
    needs: register-images
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    env:
      CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
      SERVICE_NAME: ${{ secrets.SERVICE_NAME }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-east-2
          role-session-name: deploy-on-ecs

      - name: Restart ECS service
        run: |
          aws ecs update-service --cluster  sinamecc-cluster-${{ github.event.inputs.environment }} --service sinamecc-frontend-${{ github.event.inputs.environment }} --force-new-deployment
